# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: music/genres/v1/genre.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    List,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class Genre(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ListGenresRequest(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ListGenresResponse(betterproto.Message):
    genres: List["Genre"] = betterproto.message_field(1)


class GenresServiceStub(betterproto.ServiceStub):
    async def list_genres(
        self,
        list_genres_request: "ListGenresRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "ListGenresResponse":
        return await self._unary_unary(
            "/music.genres.v1.GenresService/ListGenres",
            list_genres_request,
            ListGenresResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class GenresServiceBase(ServiceBase):
    async def list_genres(
        self, list_genres_request: "ListGenresRequest"
    ) -> "ListGenresResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_list_genres(
        self, stream: "grpclib.server.Stream[ListGenresRequest, ListGenresResponse]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.list_genres(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/music.genres.v1.GenresService/ListGenres": grpclib.const.Handler(
                self.__rpc_list_genres,
                grpclib.const.Cardinality.UNARY_UNARY,
                ListGenresRequest,
                ListGenresResponse,
            ),
        }
