// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file user/v1/spotify.proto (package user.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message user.v1.SpotifyToken
 */
export declare class SpotifyToken extends Message<SpotifyToken> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * Unix timestamp (in seconds) in which the access token will expire.
   *
   * @generated from field: int64 expires_at = 2;
   */
  expiresAt: bigint;

  /**
   * @generated from field: string token_type = 3;
   */
  tokenType: string;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];

  /**
   * @generated from field: string refresh_token = 5;
   */
  refreshToken: string;

  constructor(data?: PartialMessage<SpotifyToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user.v1.SpotifyToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpotifyToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpotifyToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpotifyToken;

  static equals(a: SpotifyToken | PlainMessage<SpotifyToken> | undefined, b: SpotifyToken | PlainMessage<SpotifyToken> | undefined): boolean;
}

