// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file scraper/v1/scraper.proto (package scraper.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message scraper.v1.ScrapeRequest
 */
export declare class ScrapeRequest extends Message<ScrapeRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<ScrapeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "scraper.v1.ScrapeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrapeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrapeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrapeRequest;

  static equals(a: ScrapeRequest | PlainMessage<ScrapeRequest> | undefined, b: ScrapeRequest | PlainMessage<ScrapeRequest> | undefined): boolean;
}

/**
 * @generated from message scraper.v1.ScrapeResponse
 */
export declare class ScrapeResponse extends Message<ScrapeResponse> {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  constructor(data?: PartialMessage<ScrapeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "scraper.v1.ScrapeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrapeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrapeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrapeResponse;

  static equals(a: ScrapeResponse | PlainMessage<ScrapeResponse> | undefined, b: ScrapeResponse | PlainMessage<ScrapeResponse> | undefined): boolean;
}

